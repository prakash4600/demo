name: Build and Deploy to AKS using Self-Hosted Runner

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "githubb"                           # ACR name (no .azurecr.io)
  CONTAINER_NAME: "bhanuprakash"                                      # Docker image name
  RESOURCE_GROUP: "Rahul"                                       # Resource Group where AKS and ACR exist
  CLUSTER_NAME: "your-cluster-name"                             # Your AKS cluster name
  DEPLOYMENT_MANIFEST_PATH: "manifests/deployment.yaml"         # Path to your Kubernetes manifest

jobs:
  buildImage:
    name: Build & Push to ACR
    permissions:
      contents: read
      id-token: write
    runs-on: [self-hosted, my-runner]  # ðŸ‘ˆ Self-hosted runner with label
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build & Push image to ACR
        run: |
          az acr build \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} \
            --registry ${{ env.AZURE_CONTAINER_REGISTRY }} \
            -g ${{ env.RESOURCE_GROUP }} \
          .


  deploy:
    name: Deploy to AKS
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: [self-hosted, my-runner]
    needs: [buildImage]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get AKS kubeconfig
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
